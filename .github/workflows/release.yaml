name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version Number (semver: 1.2.3)"
        required: true
  workflow_call:
    inputs:
      version:
        description: "Version Number (semver: 1.2.3)"
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        platform: [ "linux/amd64", "linux/arm64" ]
    # Use GitHub-hosted runner for amd64 and the arm64 partner runner for arm64
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # We don't need QEMU since we're running on native hardware.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate build ID
        id: prep
        run: |
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "BUILD_ID=${branch}-${sha}-${ts}" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.prep.outputs.BUILD_ID }}
            type=raw,value=${{ inputs.version }}

      - name: Build and push Docker image for ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ inputs.version }}
          prerelease: false
          title: ${{ inputs.version }}

  create-release:
    permissions:
      pull-requests: write
      contents: write
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create release branch
        run: git checkout -b release/${{ inputs.version }}

      - name: Init git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Update Changelog
        uses: thomaseizinger/keep-a-changelog-new-release@v3
        with:
          version: ${{ inputs.version }}

      - name: Commit changelog and version in package
        id: make-commit
        run: |
          git add CHANGELOG.md
          git commit --message "Prepare release ${{ inputs.version }}"
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Push commit
        run: |
          git push origin release/${{ inputs.version }}

      - name: Create pull request into main
        uses: thomaseizinger/create-pull-request@1.4.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: release/${{ inputs.version }}
          base: main
          title: ${{ inputs.version }} into main
          reviewers: ${{ github.event.issue.user.login }}
          body: |
            This PR was created when the Create Release workflow was run.
            I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.

      - name: Create pull request into development
        uses: thomaseizinger/create-pull-request@1.4.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: release/${{ inputs.version }}
          base: development
          title: ${{ inputs.version }} into development
          reviewers: ${{ github.event.issue.user.login }}
          body: |
            This PR was created when the Create Release workflow was run.
            I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.
